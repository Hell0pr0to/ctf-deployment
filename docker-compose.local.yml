version: '3.8'

services:
  ctfd:
    image: ctfd/ctfd:latest
    restart: always
    ports:
      - "8000:8000"
    environment:
      - UPLOAD_FOLDER=/var/uploads
      - DATABASE_URL=mysql+pymysql://root:${DB_ROOT_PASSWORD}@db/ctfd
      - REDIS_URL=redis://cache:6379
      - WORKERS=1
      - LOG_FOLDER=/var/log/CTFd
      - ACCESS_LOG=-
      - ERROR_LOG=-
      - REVERSE_PROXY=true
    volumes:
      - .data/CTFd/logs:/var/log/CTFd
      - .data/CTFd/uploads:/var/uploads
      - ./challenges:/opt/CTFd/challenges:ro
      - ./plugins:/opt/CTFd/plugins:ro
    depends_on:
      - db
      - cache
    networks:
      - ctfd-network

  nginx:
    image: nginx:stable
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.local.conf:/etc/nginx/nginx.conf:ro
      - ./certs/dev:/etc/nginx/certs:ro
    depends_on:
      - ctfd
    networks:
      - ctfd-network

  db:
    image: mariadb:10.11
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MARIADB_DATABASE=ctfd
      - MARIADB_AUTO_UPGRADE=1
    volumes:
      - .data/mysql:/var/lib/mysql
    networks:
      - ctfd-network
    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --wait_timeout=28800, --log-warnings=0]

  cache:
    image: redis:4
    restart: always
    volumes:
      - .data/redis:/data
    networks:
      - ctfd-network

  challenge-manager:
    build:
      context: .
      dockerfile: challenge-manager.Dockerfile
    volumes:
      - ./challenges:/challenges:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - ctfd-network

networks:
  ctfd-network:
    driver: bridge 